@include block(grid) {
  @include element(container) {
    @include modifier(fluid) {
      max-width: none;
    }

    margin: {
      left: auto;
      right: auto;
    }
    @each $breakpoint, $container-max-width in $container-max-widths {
      @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        max-width: $container-max-width;
      }
    }
    padding: {
      left: ($grid-gutter-width / 2);
      right: ($grid-gutter-width / 2);
    }
    position: relative;
  }

  @include element(row) {
    @include modifier(no-wrap) {
      flex-wrap: nowrap;
    }

    @include modifier(wrap-reverse) {
      flex-wrap: wrap-reverse;
    }

    display: flex;
    flex-wrap: wrap;
    margin: {
      left: ($grid-gutter-width / -2);
      right: ($grid-gutter-width / -2);
    }
  }

  @include element(column) {
    $breakpoint-counter: 0;

    @each $breakpoint in map-keys($grid-breakpoints) {
      $breakpoint-counter: ($breakpoint-counter + 1);

      @for $i from 1 through $grid-columns {
        &-#{$breakpoint}-#{$i} {
          min-height: 1px;
          padding: {
            left: ($grid-gutter-width / 2);
            right: ($grid-gutter-width / 2);
          }
          position: relative;
          width: 100%;
        }
      }

      @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
        &-#{$breakpoint} {
          flex: {
            basis: 0;
            grow: 1;
          }
          max-width: 100%;
          min-height: 1px;
          padding: {
            left: ($grid-gutter-width / 2);
            right: ($grid-gutter-width / 2);
          }
          position: relative;
        }

        @for $i from 1 through $grid-columns {
          &-#{$breakpoint}-#{$i} {
            flex: {
              basis: percentage($i / $grid-columns);
              grow: 0;
              shrink: 0;
            }
            max-width: ($i / $grid-columns);
          }
        }

        @for $i from 1 through $grid-columns {
          @include modifier(pull) {
            &-#{$breakpoint}-#{$i} {
              right: if($i > 0,
                percentage($i / $grid-columns),
                auto);
            }
          }
        }

        @for $i from 1 through $grid-columns {
          @include modifier(push) {
            &-#{$breakpoint}-#{$i} {
              left: if($i > 0,
                percentage($i / $grid-columns),
                auto);
            }
          }
        }

        @for $i from 1 through ($grid-columns - 1) {
          @if $breakpoint-counter != 1 or $i != 0 {
            @include modifier(offset) {
              &-#{$breakpoint}-#{$i} {
                margin-left: percentage($i / $grid-columns);
              }
            }
          }
        }
      }
    }
  }
}
